# -*- coding: utf-8 -*-
"""Kmeans10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19njYX60q83i6i1YEPfYmyhehhtlRQK1g
"""

import sklearn.cluster as cluster
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans
import seaborn as sns

df = pd.read_csv("/content/mall_customer.csv")
df

df.shape

scaler = MinMaxScaler()
scale = scaler.fit_transform(df[['Annual Income (k$)','Spending Score (1-100)']])
ndf = pd.DataFrame(scale,columns=['Annual Income (k$)','Spending Score (1-100)'])
ndf.head()

k = KMeans(n_clusters=3)
ypr = k.fit_predict(ndf[['Annual Income (k$)','Spending Score (1-100)']])
ypr

k.cluster_centers_

df['clusters'] = k.labels_
sns.scatterplot(x="Spending Score (1-100)", y="Annual Income (k$)",hue = 'clusters',  data=df,palette='viridis')

K=range(2,12)
wss = []
for i in K:
  Kmeans = cluster.KMeans(n_clusters=i)
  kmeans = Kmeans.fit(ndf)
  wissi = kmeans.inertia_
  wss.append(wissi)

import matplotlib.pyplot as plt

plt.xlabel('K')
plt.ylabel('Within-Cluster-Sum of Squared Errors (WSS)')
plt.plot(K,wss)

plt.xlabel('K')
plt.ylabel('Within-Cluster-Sum of Squared Errors (WSS)')
plt.plot(K,wss)

km=KMeans(n_clusters=5)
y_predicted = km.fit_predict(ndf[['Annual Income (k$)','Spending Score (1-100)']])
y_predicted

df['Clusters'] = km.labels_
sns.scatterplot(x="Spending Score (1-100)", y="Annual Income (k$)",hue = 'Clusters',  data=df,palette='viridis')

