# -*- coding: utf-8 -*-
"""LogisticReg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ko9kap6WqlbrEABMDN6YnA1v15sZtcn4
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report,confusion_matrix

df = pd.read_csv('/content/Crop_recommendation.csv')
df

df.corr()

df.shape,df.ndim

x = df.drop('label',axis=1)
y = df['label']
x,y

y.unique()

le = LabelEncoder()
z = le.fit_transform(y)
le.classes_

for i in z:
  print(i,end=" ")

x.shape,z.shape

xtr,xte,ytr,yte = train_test_split(x,z,test_size=0.05,random_state=48)
ytr.shape

xtr.shape,xte.shape

scaler = StandardScaler()
xtr = scaler.fit_transform(xtr)
xte = scaler.fit_transform(xte)

np.mean(xtr),np.std(xte)

model = LogisticRegression()
model.fit(xtr,ytr)

model.score(xtr,ytr)

ypre = model.predict(xte)
ypre

model.score(xte,yte)

b = classification_report(yte,ypre)
print(b)

j = confusion_matrix(yte,ypre)
print(j)